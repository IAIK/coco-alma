/* Generated by Yosys 0.9+4306 (git sha1 3931b3a0, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* hdlname = "\\dom_and" *)
(* dynports =  1  *)
(* top =  1  *)
(* src = "dom_and.v:1.1-66.10" *)
module dom_and(ClkCI, RstRI, LeftDI, RightDI, RandomDI, OutDO);
  wire _00_;
  wire _01_;
  (* src = "dom_and.v:39.38-39.46" *)
  wire [3:0] BlindedD;
  (* src = "dom_and.v:43.38-43.48" *)
  wire [3:0] BufferedDN;
  (* src = "dom_and.v:44.38-44.48" *)
  reg [3:0] BufferedDP;
  (* src = "dom_and.v:5.11-5.16" *)
  input ClkCI;
  (* src = "dom_and.v:15.38-15.44" *)
  (* unused_bits = "1 2" *)
  wire [3:0] CrossD;
  (* src = "dom_and.v:7.28-7.34" *)
  input [1:0] LeftDI;
  (* src = "dom_and.v:11.29-11.34" *)
  output [1:0] OutDO;
  (* src = "dom_and.v:9.28-9.36" *)
  input RandomDI;
  wire [2:0] RandomMapD;
  (* src = "dom_and.v:8.28-8.35" *)
  input [1:0] RightDI;
  (* src = "dom_and.v:6.11-6.16" *)
  input RstRI;
  assign OutDO[0] = BufferedDP[1] ^ BufferedDP[0];
  assign OutDO[1] = BufferedDP[3] ^ BufferedDP[2];
  assign BlindedD[0] = RightDI[0] & LeftDI[0];
  assign BlindedD[3] = LeftDI[1] & RightDI[1];
  assign _00_ = RightDI[1] & LeftDI[0];
  assign BlindedD[1] = _00_ ^ RandomDI;
  assign _01_ = LeftDI[1] & RightDI[0];
  assign BlindedD[2] = _01_ ^ RandomDI;
  (* src = "dom_and.v:48.5-54.8" *)
  always @(posedge ClkCI, negedge RstRI)
    if (!RstRI) BufferedDP[3] <= 1'h0;
    else BufferedDP[3] <= BlindedD[3];
  (* src = "dom_and.v:48.5-54.8" *)
  always @(posedge ClkCI, negedge RstRI)
    if (!RstRI) BufferedDP[0] <= 1'h0;
    else BufferedDP[0] <= BlindedD[0];
  (* src = "dom_and.v:48.5-54.8" *)
  always @(posedge ClkCI, negedge RstRI)
    if (!RstRI) BufferedDP[1] <= 1'h0;
    else BufferedDP[1] <= BlindedD[1];
  (* src = "dom_and.v:48.5-54.8" *)
  always @(posedge ClkCI, negedge RstRI)
    if (!RstRI) BufferedDP[2] <= 1'h0;
    else BufferedDP[2] <= BlindedD[2];
  assign BufferedDN = BlindedD;
  assign { CrossD[3], CrossD[0] } = { BlindedD[3], BlindedD[0] };
  assign RandomMapD = { RandomDI, RandomDI, 1'h0 };
endmodule
